import MainMenu from '@/components/MainMenu';
import './globals.css'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import { cookies } from 'next/headers';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import SiteContextProvider from '@/components/SiteContextProvider';
import { userType } from '@/types';

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const cookieStore = cookies()
  const token = cookieStore.get('token')?.value
  let user: userType | null | undefined = null
  if (token) {
    user = await getUser(token)
  }
  return (
    <html lang="en">
      <body className={`${inter.className} flex flex-row bg-gray-100 scrollBar`}>
        <SiteContextProvider user={user}>
          <MainMenu/>
          {children}
          <ToastContainer
            position="bottom-left"
            autoClose={5000}
            hideProgressBar={false}
            newestOnTop={false}
            closeOnClick
            rtl={false}
            pauseOnFocusLoss
            draggable
            pauseOnHover
            theme="colored"
          />
        </SiteContextProvider>

      </body>
    </html>
  )
}

async function getUser(token: string): Promise<userType | null | undefined> {
  try {
    const resUser = await fetch(`${process.env.appPath}/api/userApi/getCurrentUserApi`, {
      method: 'POST',
      body: JSON.stringify({
        apiSecret: process.env.apiSecret,
        token
      }),
      cache: 'no-cache'
    })

    const res = await resUser.json()

    if (resUser.status == 200) {
      return res
    } else {
      return undefined
    }
  } catch (error) {
    console.log(error)
    return undefined
  }
}
